{
    "openapi": "3.0.0",
    "info": {
        "title": "Midesk API Reference",
        "version": "1.0.0"
    },
    "paths": {
        "/api/v3/auth/login": {
            "post": {
                "tags": [
                    "Login"
                ],
                "summary": "Login to get token",
                "description": "<h2>To login to get token you need fill in your email and password </h2><br> \r\n    <code>Press try it out button to get token</code><br>\r\n    <code>After receiving the token you need to copy it then you can press the Authorize button and past the token in value field</code><br>\r\n    <code id='require'>Don't forget to put Bearer in front of the token</code><br>\r\n    <code id='require'>Example: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9</code>",
                "operationId": "authLogin",
                "requestBody": {
                    "description": "<code>Fill email and password below to get token</code><br><code>Click Schema to view data property</code>",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user2@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "PassWord12345"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "access_token": {
                                                    "type": "string",
                                                    "example": "$token"
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                },
                                                "expires_in": {
                                                    "type": "number",
                                                    "example": "300"
                                                },
                                                "permissions": {
                                                    "properties": {
                                                        "dashboard_cskh": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string",
                                                                "example": "View"
                                                            }
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "roles": {
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Role Name"
                                                        },
                                                        "type": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string",
                                                                "example": "User type name"
                                                            }
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v3/contact": {
            "get": {
                "tags": [
                    "Contact"
                ],
                "summary": "Get list contact",
                "description": "<h2>This API will Get list contact with condition below</h2>",
                "operationId": "index",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "<h4>Number of page to get</h4>\r\n                    <code>Type: <b id='require'>Number</b></code>",
                        "required": false,
                        "explode": true,
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "<h4>Total number of records to get</h4>\r\n                    <code>Type: <b id='require'>Number<b></code>",
                        "required": false,
                        "explode": true,
                        "example": 5
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "<h4>Find records with condition get result desire</h4>\r\n                    <code>Type: <b id='require'>String<b></code><br>\r\n                    <code>Seach type supported with <b id='require'><(like,=,!=,beetwen)></b> </code><br>\r\n                    <code>With type search beetwen value like this <b id='require'> created_at<<beetwen>beetwen>{$start_date}|{$end_date}</b> format (Y/m/d H:i:s)</code><br>\r\n                    <code id='require'>If multiple search with connect (,) before</code>",
                        "required": false,
                        "explode": true,
                        "example": "firstname<=>Nhá»¡"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "<h4>Sort records by colunm</h4>\r\n                    <code>Type: <b id='require'>String</b></code><br>\r\n                    <code>Sort type supported with <b id='require'>(DESC,ASC)</b></code><br>\r\n                    <code id='require'>If multiple order with connect (,) before</code>",
                        "required": false,
                        "explode": true,
                        "example": "id:DESC"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "<h4>Get only the desired columns</h4>\r\n                    <code>Type: <b id='require'>String<b></code>",
                        "required": false,
                        "explode": true,
                        "example": "fullname,phone,email"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "string",
                                                            "example": "1"
                                                        },
                                                        "contact_id": {
                                                            "type": "string",
                                                            "example": "1"
                                                        },
                                                        "firstname": {
                                                            "type": "string",
                                                            "example": "vÄn A"
                                                        },
                                                        "lastname": {
                                                            "type": "string",
                                                            "example": "Nguyá»n"
                                                        },
                                                        "phone": {
                                                            "type": "string",
                                                            "example": "0987654321"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "abcxyz@gmail.com"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "current_page": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "first_page_url": {
                                                    "type": "string",
                                                    "example": "null"
                                                },
                                                "next_page_url": {
                                                    "type": "string",
                                                    "example": "null"
                                                },
                                                "last_page_url": {
                                                    "type": "string",
                                                    "example": "null"
                                                },
                                                "prev_page_url": {
                                                    "type": "string",
                                                    "example": "null"
                                                },
                                                "from": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "to": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "total": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "path": {
                                                    "type": "string",
                                                    "example": "http://api-dev2021.midesk.vn/api/v3/contact"
                                                },
                                                "last_page": {
                                                    "type": "string",
                                                    "example": "null"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Contact"
                ],
                "summary": "Create a contact",
                "description": "<h2>This API will Create a contact with json form below</h2><br><code>Press try it out button to modified</code>",
                "operationId": "store",
                "requestBody": {
                    "description": "<table id='my-custom-table'>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>Description</th>\r\n                    <td><b id='require'>Required</b></td>\r\n                </tr>\r\n                <tr>\r\n                    <th>fullname</th>\r\n                    <td>This is full name of contact</td>\r\n                    <td>true</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>email</th>\r\n                    <td>This is email of contact</td>\r\n                    <td>true if without phone</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>phone</th>\r\n                    <td>This is phone number of contact</td>\r\n                    <td>true if without email</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>address</th>\r\n                    <td>This is address of contact</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>gender</th>\r\n                    <td>This is gender of contact</td>\r\n                    <td>false</td>\r\n                </tr>\r\n            </table><br><code>Click Schema to view data property</code>",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "fullname",
                                    "phone"
                                ],
                                "properties": {
                                    "fullname": {
                                        "type": "string",
                                        "example": "Nguyá»n vÄn A"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "acb@xyz"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "0123456789"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123/321/HCM"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "example": "female"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Create Contact Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Create Contact Successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "contact_id": {
                                                    "type": "string",
                                                    "example": "1"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Create Contact failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        },
                                        "errors": {
                                            "properties": {
                                                "fullname": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "the fullname field is required"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v3/contact/{contactId}": {
            "get": {
                "tags": [
                    "Contact"
                ],
                "summary": "Find contact by contactId",
                "description": "<h2>This API will find contact by {contactId} and return only a single record</h2>",
                "operationId": "show",
                "parameters": [
                    {
                        "name": "contactId",
                        "in": "path",
                        "description": "<h4>This is the id of the contact you are looking for</h4>\r\n              <code>Type: <b id='require'>Number</b></code>",
                        "required": true,
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "contact_id": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "firstname": {
                                                    "type": "string",
                                                    "example": "Nguyá»n"
                                                },
                                                "lastname": {
                                                    "type": "string",
                                                    "example": "vÄn A"
                                                },
                                                "fullname": {
                                                    "type": "string",
                                                    "example": "Nguyá»n vÄn A"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "0987654321"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "abcxyz@gmail.com"
                                                },
                                                "gender": {
                                                    "type": "string",
                                                    "example": "null"
                                                },
                                                "province": {
                                                    "type": "string",
                                                    "example": "null"
                                                },
                                                "district": {
                                                    "type": "string",
                                                    "example": "null"
                                                },
                                                "birthday": {
                                                    "type": "string",
                                                    "example": "null"
                                                },
                                                "address": {
                                                    "type": "string",
                                                    "example": "null"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Will be return contact not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Contact not found"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Contact"
                ],
                "summary": "Delete a contact by contactId",
                "description": "<h2>This API will delete a contact by contactId</h2>",
                "operationId": "destroy",
                "parameters": [
                    {
                        "name": "contactId",
                        "in": "path",
                        "description": "<h4>This is the id of the contact you need delete</h4>\r\n              <code>Type: <b id='require'>Number</b></code>",
                        "required": true,
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete contact successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Delete contact successfully"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Contact not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Contact not found"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v3/contact/{$contactId}": {
            "put": {
                "tags": [
                    "Contact"
                ],
                "summary": "Update contact by contactId",
                "description": "<h2>This API will update a contact by contactId and the value json form below</h2><br><code>Press try it out button to modified</code>",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "contactId",
                        "in": "path",
                        "description": "<h4>This is the id of the contact you need update</h4>\r\n              <code>Type: <b id='require'>Number</b></code>",
                        "required": true,
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "<table id='my-custom-table'>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>Description</th>\r\n                    <td><b id='require'>Required</b></td>\r\n                </tr>\r\n                <tr>\r\n                    <th>fullname</th>\r\n                    <td>This is full name of contact</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>email</th>\r\n                    <td>This is email of contact</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>phone</th>\r\n                    <td>This is phone number of contact</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>address</th>\r\n                    <td>This is address of contact</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>gender</th>\r\n                    <td>This is gender of contact</td>\r\n                    <td>false</td>\r\n                </tr>\r\n            </table><br><code>Click Schema to view data property</code>",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "fullname",
                                    "phone",
                                    "email"
                                ],
                                "properties": {
                                    "fullname": {
                                        "type": "string",
                                        "example": "NgÃ´ vÄn B"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "0987654321"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "abc@xyz123"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123/321/HCM"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "example": "male"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Update successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Update contact successfully"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Will be return contact not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Contact not found"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v3/customer": {
            "get": {
                "tags": [
                    "Customer"
                ],
                "summary": "Get list customer",
                "description": "<h2>This API will Get list customer with condition below</h2>",
                "operationId": "index",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "<h4>Number of page to get</h4>\r\n                    <code>Type: <b id='require'>Number</b></code>",
                        "required": false,
                        "explode": true,
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "<h4>Total number of records to get</h4>\r\n                    <code>Type: <b id='require'>Number<b></code>",
                        "required": false,
                        "explode": true,
                        "example": 5
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "<h4>Find records with condition get result desire</h4>\r\n                    <code>Type: <b id='require'>String<b></code><br>\r\n                    <code>Seach type supported with <b id='require'><(like,=,!=,beetwen)></b> </code><br>\r\n                    <code>With type search beetwen value like this <b id='require'> created_at<<beetwen>beetwen>{$start_date}|{$end_date}</b> format (Y/m/d H:i:s)</code><br>\r\n                    <code id='require'>If multiple search with connect (,) before</code>",
                        "required": false,
                        "explode": true,
                        "example": "fullname<=>nguyá»n vÄn a"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "<h4>Sort records by colunm</h4>\r\n                    <code>Type: <b id='require'>String</b></code><br>\r\n                    <code>Sort type supported with <b id='require'>(DESC,ASC)</b></code><br>\r\n                    <code id='require'>If multiple order with connect (,) before</code>",
                        "required": false,
                        "explode": true,
                        "example": "id:DESC"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "<h4>Get only the desired columns</h4>\r\n                    <code>Type: <b id='require'>String<b></code>",
                        "required": false,
                        "explode": true,
                        "example": "id,fullname,phone"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "string",
                                                            "example": "1"
                                                        },
                                                        "fullname": {
                                                            "type": "string",
                                                            "example": "vÄn A"
                                                        },
                                                        "phone": {
                                                            "type": "string",
                                                            "example": "0362548726"
                                                        },
                                                        "phone_other": {
                                                            "type": "string",
                                                            "example": "0987654321"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "abcxyz@gmail.com"
                                                        },
                                                        "address": {
                                                            "type": "string",
                                                            "example": "abc/271/10"
                                                        },
                                                        "province": {
                                                            "type": "string",
                                                            "example": "HCM"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "current_page": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "first_page_url": {
                                                    "type": "string",
                                                    "example": "null"
                                                },
                                                "next_page_url": {
                                                    "type": "string",
                                                    "example": "null"
                                                },
                                                "last_page_url": {
                                                    "type": "string",
                                                    "example": "null"
                                                },
                                                "prev_page_url": {
                                                    "type": "string",
                                                    "example": "null"
                                                },
                                                "from": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "to": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "total": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "path": {
                                                    "type": "string",
                                                    "example": "http://api-dev2021.midesk.vn/api/v3/customer"
                                                },
                                                "last_page": {
                                                    "type": "string",
                                                    "example": "null"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Customer"
                ],
                "summary": "Create a customer",
                "description": "<h2>This API will Create a customer with json form below</h2><br><code>Press try it out button to modified</code>",
                "operationId": "store",
                "requestBody": {
                    "description": "<table id='my-custom-table'>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>Description</th>\r\n                    <td><b id='require'>Required</b></td>\r\n                </tr>\r\n                <tr>\r\n                    <th>fullname</th>\r\n                    <td>This is full name of customer</td>\r\n                    <td>true</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>email</th>\r\n                    <td>This is email of customer</td>\r\n                    <td>True if without phone</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>phone</th>\r\n                    <td>This is phone number of customer</td>\r\n                    <td>True if without email</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>address</th>\r\n                    <td>This is address of customer</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>province</th>\r\n                    <td>This is province of customer</td>\r\n                    <td>false</td>\r\n                </tr>\r\n            </table><br><code>Click Schema to view data property</code>",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "fullname",
                                    "phone",
                                    "email"
                                ],
                                "properties": {
                                    "fullname": {
                                        "type": "string",
                                        "example": "Nguyá»n vÄn A"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "acb@xyz"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "0123456789"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123/321"
                                    },
                                    "province": {
                                        "type": "string",
                                        "example": "HCM"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Create Customer Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Create Customer Successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "example": "1"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Create Customer failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        },
                                        "errors": {
                                            "properties": {
                                                "fullname": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "the fullname field is required"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v3/customer/{customerId}": {
            "get": {
                "tags": [
                    "Customer"
                ],
                "summary": "Find customer by customerId",
                "description": "<h2>This API will find customer by {customerId} and return only a single record</h2>",
                "operationId": "show",
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "path",
                        "description": "<h4>This is the id of the customer you are looking for</h4>\r\n              <code>Type: <b id='require'>Number</b></code>",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "fullname": {
                                                    "type": "string",
                                                    "example": "Nguyá»n vÄn A"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "0987654321"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "abcxyz@gmail.com"
                                                },
                                                "address": {
                                                    "type": "string",
                                                    "example": "123/12b"
                                                },
                                                "province": {
                                                    "type": "string",
                                                    "example": "Há» ChÃ­ Minh"
                                                },
                                                "country": {
                                                    "type": "string",
                                                    "example": "Viá»t Nam"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Will be return customer not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Customer not found"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Customer"
                ],
                "summary": "Delete a customer by customerId",
                "description": "<h2>This API will delete a customer by customerId</h2>",
                "operationId": "destroy",
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "path",
                        "description": "<h4>This is the id of the customer you need delete</h4>\r\n              <code>Type: <b id='require'>Number</b></code>",
                        "required": true,
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete customer successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Delete customer successfully"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Customer not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Customer not found"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v3/customer/{$customerId}": {
            "put": {
                "tags": [
                    "Customer"
                ],
                "summary": "Update customer by customerId",
                "description": "<h2>This API will update a customer by customerId and the value json form below</h2><br><code>Press try it out button to modified</code>",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "path",
                        "description": "<h4>This is the id of the customer you need update</h4>\r\n              <code>Type: <b id='require'>Number</b></code>",
                        "required": true,
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "<table id='my-custom-table'>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>Description</th>\r\n                    <td><b id='require'>Required</b></td>\r\n                </tr>\r\n                <tr>\r\n                    <th>fullname</th>\r\n                    <td>This is full name of customer</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>email</th>\r\n                    <td>This is email of customer</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>phone</th>\r\n                    <td>This is phone num of customer</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>address</th>\r\n                    <td>This is address of customer</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>province</th>\r\n                    <td>This is province of customer</td>\r\n                    <td>false</td>\r\n                </tr>\r\n            </table><br><code>Click Schema to view data property</code>",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "fullname",
                                    "phone",
                                    "email"
                                ],
                                "properties": {
                                    "fullname": {
                                        "type": "string",
                                        "example": "NgÃ´ vÄn B"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "0987654321"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "abc@xyz123"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123/321/HCM"
                                    },
                                    "province": {
                                        "type": "string",
                                        "example": "male"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Update successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Update customer successfully"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Will be return customer not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Customer not found"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v3/event": {
            "get": {
                "tags": [
                    "Event"
                ],
                "summary": "Get list event",
                "description": "<h2>This API will Get list event with condition below</h2>",
                "operationId": "index",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "<h4>Number of page to get</h4>\r\n                    <code>Type: <b id='require'>Number</b></code>",
                        "required": false,
                        "explode": true,
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "<h4>Total number of records to get</h4>\r\n                    <code>Type: <b id='require'>Number<b></code>",
                        "required": false,
                        "explode": true,
                        "example": 5
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "<h4>Find records with condition get result desire</h4>\r\n                    <code>Type: <b id='require'>String<b></code><br>\r\n                    <code>Seach type supported with <b id='require'><(like,=,!=,beetwen)></b> </code><br>\r\n                    <code>With type search beetwen value like this <b id='require'> created_at<<beetwen>beetwen>{$start_date}|{$end_date}</b> format (Y/m/d H:i:s)</code><br>\r\n                    <code id='require'>If multiple search with connect (,) before</code>",
                        "required": false,
                        "explode": true,
                        "example": "event_title<=>Gá»i Äiá»n há»i thÄm"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "<h4>Sort records by colunm</h4>\r\n                    <code>Type: <b id='require'>String</b></code><br>\r\n                    <code>Sort type supported with <b id='require'>(DESC,ASC)</b></code><br>\r\n                    <code id='require'>If multiple order with connect (,) before</code>",
                        "required": false,
                        "explode": true,
                        "example": "id:DESC"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "<h4>Get only the desired columns</h4>\r\n                    <code>Type: <b id='require'>String<b></code>",
                        "required": false,
                        "explode": true,
                        "example": "event_title,event_source,remind_time,remind_type"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "string",
                                                            "example": "1"
                                                        },
                                                        "firstname": {
                                                            "type": "string",
                                                            "example": "vÄn A"
                                                        },
                                                        "lastname": {
                                                            "type": "string",
                                                            "example": "Nguyá»n"
                                                        },
                                                        "phone": {
                                                            "type": "string",
                                                            "example": "0987654321"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "abcxyz@gmail.com"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "current_page": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "first_page_url": {
                                                    "type": "string",
                                                    "example": "null"
                                                },
                                                "next_page_url": {
                                                    "type": "string",
                                                    "example": "null"
                                                },
                                                "last_page_url": {
                                                    "type": "string",
                                                    "example": "null"
                                                },
                                                "prev_page_url": {
                                                    "type": "string",
                                                    "example": "null"
                                                },
                                                "from": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "to": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "total": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "path": {
                                                    "type": "string",
                                                    "example": "http://api-dev2021.midesk.vn/api/v3/event"
                                                },
                                                "last_page": {
                                                    "type": "string",
                                                    "example": "null"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Event"
                ],
                "summary": "Create a event",
                "description": "<h2>This API will Create a event with json form below</h2><br><code>Press try it out button to modified</code>",
                "operationId": "store",
                "requestBody": {
                    "description": "<table id='my-custom-table'>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>Description</th>\r\n                    <td><b id='require'>Required</b></td>\r\n                </tr>\r\n                <tr>\r\n                    <th>event_title</th>\r\n                    <td>Title of ticket</td>\r\n                    <td>true</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>event_type</th>\r\n                    <td>Category of event</td>\r\n                    <td>true</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>Note</th>\r\n                    <td>Note of event</td>\r\n                    <td>true</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>event_location</th>\r\n                    <td>event venue</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>remind_time</th>\r\n                    <td>time to remind</td>\r\n                    <td>true</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>remind_type</th>\r\n                    <td>type remind of event</td>\r\n                    <td>true ('date','daily','weekly','monthly','yearly')</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>handling_team</th>\r\n                    <td>handling parts</td>\r\n                    <td>true</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>handling_agent</th>\r\n                    <td>agent handling this event</td>\r\n                    <td>true</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>event_source</th>\r\n                    <td>source event</td>\r\n                    <td>true (contact,agent,customer)</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>event_source_id</th>\r\n                    <td>id of source event</td>\r\n                    <td>true</td>\r\n                </tr>\r\n            </table><br><code>Click Schema to view data property</code>",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "event_title": {
                                        "type": "string",
                                        "example": "Sinh nháº­t"
                                    },
                                    "event_type": {
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "note": {
                                        "type": "string",
                                        "example": "this is example"
                                    },
                                    "remind_time": {
                                        "type": "string",
                                        "example": "15/03/2022 17:20:00"
                                    },
                                    "remind_type": {
                                        "type": "string",
                                        "example": "daily"
                                    },
                                    "handling_team": {
                                        "type": "number",
                                        "example": "1"
                                    },
                                    "handling_agent": {
                                        "type": "number",
                                        "example": "1"
                                    },
                                    "event_source": {
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "event_source_id": {
                                        "type": "number",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Create Event Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Create Event Successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "example": "1"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Create Event failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        },
                                        "errors": {
                                            "properties": {
                                                "event_title": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "the event title field is required"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v3/event/eventForm": {
            "get": {
                "tags": [
                    "Event"
                ],
                "summary": "Get sample data to create event",
                "description": "<h2>This API will get sample data to create event</h2><br><code>Press try it out button to modified</code>",
                "operationId": "eventForm",
                "responses": {
                    "200": {
                        "description": "Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "properties": {
                                                        "team": {
                                                            "properties": {
                                                                "13": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "properties": {
                                                                            "team_id": {
                                                                                "type": "string",
                                                                                "example": "1"
                                                                            },
                                                                            "team_name": {
                                                                                "type": "string",
                                                                                "example": "team 1"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "agent": {
                                                            "type": "array",
                                                            "items": {
                                                                "properties": {
                                                                    "team_id": {
                                                                        "type": "string",
                                                                        "example": "21"
                                                                    },
                                                                    "agent_id": {
                                                                        "type": "string",
                                                                        "example": "11"
                                                                    },
                                                                    "agent": {
                                                                        "type": "array",
                                                                        "items": {
                                                                            "properties": {
                                                                                "id": {
                                                                                    "type": "string",
                                                                                    "example": "1"
                                                                                },
                                                                                "fullname": {
                                                                                    "type": "string",
                                                                                    "example": "agent name"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "category": {
                                                            "type": "array",
                                                            "items": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "string",
                                                                        "example": "1"
                                                                    },
                                                                    "etype_name": {
                                                                        "type": "string",
                                                                        "example": "Dinner"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type_remind": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string",
                                                                "example": "date"
                                                            }
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v3/event/{eventId}": {
            "get": {
                "tags": [
                    "Event"
                ],
                "summary": "Find event by eventId",
                "description": "<h2>This API will find event by {eventId} and return only a single record</h2>",
                "operationId": "show",
                "parameters": [
                    {
                        "name": "eventId",
                        "in": "path",
                        "description": "<h4>This is the id of the event you are looking for</h4>\r\n              <code>Type: <b id='require'>Number</b></code>",
                        "required": true,
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "event_title": {
                                                    "type": "string",
                                                    "example": "this is example event"
                                                },
                                                "event_source": {
                                                    "type": "string",
                                                    "example": "contact"
                                                },
                                                "event_source_id": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "event_status": {
                                                    "type": "string",
                                                    "example": "publish"
                                                },
                                                "remind_time": {
                                                    "type": "string",
                                                    "example": "2022-02-11 15:24:00"
                                                },
                                                "remind_type": {
                                                    "type": "string",
                                                    "example": "91"
                                                },
                                                "days_noti_before_type": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "event_type": {
                                                    "type": "string",
                                                    "example": "1"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Event do not exist",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "boolean",
                                            "example": "Event do not exist"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Event"
                ],
                "summary": "Delete a event by eventId",
                "description": "<h2>This API will delete a event by eventId</h2>",
                "operationId": "destroy",
                "parameters": [
                    {
                        "name": "eventId",
                        "in": "path",
                        "description": "<h4>This is the id of the event you need delete</h4>\r\n              <code>Type: <b id='require'>Number</b></code>",
                        "required": true,
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete event successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Delete event successfully"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Event not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Event not found"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v3/event/{$eventId}": {
            "put": {
                "tags": [
                    "Event"
                ],
                "summary": "Update event by eventId",
                "description": "<h2>This API will update a event by eventId and the value json form below</h2><br><code>Press try it out button to modified</code>",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "eventId",
                        "in": "path",
                        "description": "<h4>This is the id of the event you need update</h4>\r\n              <code>Type: <b id='require'>Number</b></code>",
                        "required": true,
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "<table id='my-custom-table'>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>Description</th>\r\n                    <td><b id='require'>Required</b></td>\r\n                </tr>\r\n                <tr>\r\n                    <th>event_tile</th>\r\n                    <td>Title of ticket</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>event_type</th>\r\n                    <td>Category of event</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>Note</th>\r\n                    <td>Note of event</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>event_location</th>\r\n                    <td>event venue</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>remind_time</th>\r\n                    <td>time to remind</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>remind_type</th>\r\n                    <td>type remind of event</td>\r\n                    <td>false ('date','daily','weekly','monthly','yearly')</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>handling_team</th>\r\n                    <td>handling parts</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>handling_agent</th>\r\n                    <td>agent handling this event</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>event_source</th>\r\n                    <td>source event</td>\r\n                    <td>false (contact,agent,customer)</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>event_source_id</th>\r\n                    <td>id of source event</td>\r\n                    <td>false</td>\r\n                </tr>\r\n            </table><br><code>Click Schema to view data property</code>",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "event_title": {
                                        "type": "string",
                                        "example": "Sinh nháº­t"
                                    },
                                    "event_type": {
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "note": {
                                        "type": "string",
                                        "example": "this is example"
                                    },
                                    "remind_time": {
                                        "type": "string",
                                        "example": "15/03/2022 17:20:00"
                                    },
                                    "remind_type": {
                                        "type": "string",
                                        "example": "daily"
                                    },
                                    "handling_team": {
                                        "type": "number",
                                        "example": "1"
                                    },
                                    "handling_agent": {
                                        "type": "number",
                                        "example": "1"
                                    },
                                    "event_source": {
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "event_source_id": {
                                        "type": "number",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Update successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Update event successfully"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Update failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "remind_type field do not match"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Will be return event not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Event do not exist"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v3/order": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "Get list order",
                "description": "<h2>This API will Get list order with condition below</h2>",
                "operationId": "index",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "<h4>Number of page to get</h4>\r\n                    <code>Type: <b id='require'>Number</b></code>",
                        "required": false,
                        "explode": true,
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "<h4>Total number of records to get</h4>\r\n                    <code>Type: <b id='require'>Number<b></code>",
                        "required": false,
                        "explode": true,
                        "example": 5
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "<h4>Find records with condition get result desire</h4>\r\n                    <code>Type: <b id='require'>String<b></code><br>\r\n                    <code>Seach type supported with <b id='require'><(like,=,!=,beetwen)></b> </code><br>\r\n                    <code>With type search beetwen value like this <b id='require'> created_at<<beetwen>beetwen>{$start_date}|{$end_date}</b> format (Y/m/d H:i:s)</code><br>\r\n                    <code id='require'>If multiple search with connect (,) before</code>",
                        "required": false,
                        "explode": true,
                        "example": "title<=>Gá»i nhá»¡"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "<h4>Sort records by colunm</h4>\r\n                    <code>Type: <b id='require'>String</b></code><br>\r\n                    <code>Sort type supported with <b id='require'>(DESC,ASC)</b></code><br>\r\n                    <code id='require'>If multiple order with connect (,) before</code>",
                        "required": false,
                        "explode": true,
                        "example": "id:DESC"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "<h4>Get only the desired columns</h4>\r\n                    <code>Type: <b id='require'>String<b></code>",
                        "required": false,
                        "explode": true,
                        "example": "title,status,content"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "string",
                                                            "example": "1"
                                                        },
                                                        "ord_code": {
                                                            "type": "string",
                                                            "example": "null"
                                                        },
                                                        "ord_address": {
                                                            "type": "string",
                                                            "example": "null"
                                                        },
                                                        "ord_description": {
                                                            "type": "string",
                                                            "example": "null"
                                                        },
                                                        "ord_group_name": {
                                                            "type": "string",
                                                            "example": "null"
                                                        },
                                                        "ord_group": {
                                                            "type": "string",
                                                            "example": "null"
                                                        },
                                                        "ord_status_value": {
                                                            "type": "string",
                                                            "example": "null"
                                                        },
                                                        "ord_status": {
                                                            "type": "string",
                                                            "example": "null"
                                                        },
                                                        "ord_discount": {
                                                            "type": "string",
                                                            "example": "null"
                                                        },
                                                        "ord_surcharge": {
                                                            "type": "string",
                                                            "example": "null"
                                                        },
                                                        "ord_total": {
                                                            "type": "string",
                                                            "example": "null"
                                                        },
                                                        "ord_rest_of_total": {
                                                            "type": "string",
                                                            "example": "null"
                                                        },
                                                        "ord_ship": {
                                                            "type": "string",
                                                            "example": "null"
                                                        },
                                                        "ord_customer_id": {
                                                            "type": "string",
                                                            "example": "null"
                                                        },
                                                        "ord_customer_name": {
                                                            "type": "string",
                                                            "example": "null"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "current_page": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "first_page_url": {
                                                    "type": "string",
                                                    "example": "null"
                                                },
                                                "next_page_url": {
                                                    "type": "string",
                                                    "example": "null"
                                                },
                                                "last_page_url": {
                                                    "type": "string",
                                                    "example": "null"
                                                },
                                                "prev_page_url": {
                                                    "type": "string",
                                                    "example": "null"
                                                },
                                                "from": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "to": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "total": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "path": {
                                                    "type": "string",
                                                    "example": "http://api-dev2021.midesk.vn/api/v3/order"
                                                },
                                                "last_page": {
                                                    "type": "string",
                                                    "example": "null"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Order"
                ],
                "summary": "Create a order",
                "description": "<h2>This API will Create a order with json form below</h2><br><code>Press try it out button to modified</code>",
                "operationId": "store",
                "requestBody": {
                    "description": "<table id='my-custom-table'>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>Description</th>\r\n                    <td><b id='require'>Required</b></td>\r\n                </tr>\r\n                <tr>\r\n                    <th>order_status</th>\r\n                    <td>This is status of order</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>order_id</th>\r\n                    <td>This is id of order</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>order_group</th>\r\n                    <td>This is order channel</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>order_description</th>\r\n                    <td>This is description of order</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>customer</th>\r\n                    <td>\r\n                        <table>\r\n                            <tr><td colspan='3'> <br> <b id='require'>(id customer or create customer with array below)</b></td></tr>\r\n                            <tr>\r\n                                <th>fullname</th>\r\n                                <td>This is name of customer</td>\r\n                                <td>true</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>phone</th>\r\n                                <td>This is phone of customer</td>\r\n                                <td>true</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>email</th>\r\n                                <td>This is email of customer</td>\r\n                                <td>true</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>address</th>\r\n                                <td>This is address of customer</td>\r\n                                <td>false</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>locate</th>\r\n                                <td>This is location of customer</td>\r\n                                <td>false</td>\r\n                            </tr>\r\n                        </table>\r\n                    </td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>contact</th>\r\n                    <td>\r\n                        <table>\r\n                            <tr><td colspan='3'> <br> <b id='require'>(id contact or create contact with array below)</b></td></tr>\r\n                            <tr>\r\n                                <th>fullname</th>\r\n                                <td>This is contact name of contact</td>\r\n                                <td>true</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>phone</th>\r\n                                <td>This is contact phone of contact</td>\r\n                                <td>true</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>email</th>\r\n                                <td>This is contact email of contact</td>\r\n                                <td>true</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>address</th>\r\n                                <td>This is contact address of contact</td>\r\n                                <td>false</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>locate</th>\r\n                                <td>This is contact location of contact</td>\r\n                                <td>false</td>\r\n                            </tr>\r\n                        </table>\r\n                    </td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>products</th>\r\n                    <td>\r\n                        <table>\r\n                            <tr>\r\n                                <th>image_product</th>\r\n                                <td>Image of product</td>\r\n                                <td>false</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>code_product</th>\r\n                                <td>code of product</td>\r\n                                <td>true</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>name_product</th>\r\n                                <td>Product name</td>\r\n                                <td>true</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>cost_product</th>\r\n                                <td>cost of product</td>\r\n                                <td>false</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>price_product</th>\r\n                                <td>Price product for sell</td>\r\n                                <td>false</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>color_product</th>\r\n                                <td>Product color</td>\r\n                                <td>false</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>option_product</th>\r\n                                <td>Option of product</td>\r\n                                <td>false</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>gift_product</th>\r\n                                <td>gift when buy product</td>\r\n                                <td>false</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>notes_product</th>\r\n                                <td>notes for product</td>\r\n                                <td>false</td>\r\n                            </tr>\r\n                        </table>\r\n                    </td>\r\n                    <td>true</td>\r\n                </tr>\r\n            </table><br><code>Click Schema to view data property</code>",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "customer.fullname,contact.fullname,product.code_product,product.name_product"
                                ],
                                "properties": {
                                    "order_status": {
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "order_id": {
                                        "type": "string",
                                        "example": "DH001"
                                    },
                                    "order_group": {
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "order_description": {
                                        "type": "string",
                                        "example": "notes to order"
                                    },
                                    "products": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "code_product",
                                                "name_product"
                                            ],
                                            "properties": {
                                                "image_product": {
                                                    "type": "string",
                                                    "example": "https://dbk.vn/uploads/ckfinder/images/1-content/anh-dep-1.jpg"
                                                },
                                                "code_product": {
                                                    "type": "string",
                                                    "example": "H001"
                                                },
                                                "name_product": {
                                                    "type": "string",
                                                    "example": "Iphone 3 promax"
                                                },
                                                "cost_product": {
                                                    "type": "string",
                                                    "example": "2,000,000"
                                                },
                                                "price_product": {
                                                    "type": "string",
                                                    "example": "20,000,000"
                                                },
                                                "color_product": {
                                                    "type": "string",
                                                    "example": "Xanh"
                                                },
                                                "option_product": {
                                                    "type": "string",
                                                    "example": "1 máº¯t"
                                                },
                                                "gift_product": {
                                                    "type": "string",
                                                    "example": "á»p lÆ°ng"
                                                },
                                                "notes_product": {
                                                    "type": "string",
                                                    "example": "nothing to notes"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "customer": {
                                        "properties": {
                                            "fullname": {
                                                "type": "string",
                                                "example": "Nguyá»n vÄn A"
                                            },
                                            "email": {
                                                "type": "string",
                                                "example": "acbxyx@gmail.com"
                                            },
                                            "phone": {
                                                "type": "string",
                                                "example": "0123456789"
                                            },
                                            "address": {
                                                "type": "string",
                                                "example": "86/3/BÃ¬nh an/Quáº­n 2"
                                            },
                                            "locate": {
                                                "type": "string",
                                                "example": "HCM"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "contact": {
                                        "properties": {
                                            "fullname": {
                                                "type": "string",
                                                "example": "Nguyá»n vÄn A"
                                            },
                                            "email": {
                                                "type": "string",
                                                "example": "acbxyx@gmail.com"
                                            },
                                            "phone": {
                                                "type": "string",
                                                "example": "0123456789"
                                            },
                                            "address": {
                                                "type": "string",
                                                "example": "86/3/BÃ¬nh an/Quáº­n 2"
                                            },
                                            "locate": {
                                                "type": "string",
                                                "example": "HCM"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Create order Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Create order Successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "ord_code": {
                                                    "type": "string",
                                                    "example": "1"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Create Order failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "contact.fullname": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The contact.fullname field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v3/order/{orderCode}": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "Find order by orderCode",
                "description": "<h2>This API will find order by {orderCode} and return only a single record</h2>",
                "operationId": "show",
                "parameters": [
                    {
                        "name": "orderCode",
                        "in": "path",
                        "description": "<h4>This is the order code of the order you are looking for</h4>\r\n              <code>Type: <b id='require'>String</b></code>",
                        "required": true,
                        "example": "DH0001"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "ord_code": {
                                                    "type": "string",
                                                    "example": "DH000002"
                                                },
                                                "ord_address": {
                                                    "type": "string",
                                                    "example": "null"
                                                },
                                                "ord_description": {
                                                    "type": "string",
                                                    "example": "This is a description"
                                                },
                                                "ord_group_name": {
                                                    "type": "string",
                                                    "example": "Test"
                                                },
                                                "ord_status_value": {
                                                    "type": "string",
                                                    "example": "null"
                                                },
                                                "ord_status": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "ord_discount": {
                                                    "type": "string",
                                                    "example": "0"
                                                },
                                                "ord_surcharge": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "ord_total": {
                                                    "type": "string",
                                                    "example": "100"
                                                },
                                                "ord_rest_of_total": {
                                                    "type": "string",
                                                    "example": "101"
                                                },
                                                "ord_ship": {
                                                    "type": "string",
                                                    "example": "20"
                                                },
                                                "ord_customer_name": {
                                                    "type": "string",
                                                    "example": "BMW VN"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order not found"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Order"
                ],
                "summary": "Delete a order by orderCode",
                "description": "<h2>This API will delete a order by orderCode</h2>",
                "operationId": "destroy",
                "parameters": [
                    {
                        "name": "orderCode",
                        "in": "path",
                        "description": "<h4>This is the id of the order you need delete</h4>\r\n              <code>Type: <b id='require'>Number</b></code>",
                        "required": true,
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete order successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Delete order successfully"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order not found"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v3/order/{$orderCode}": {
            "put": {
                "tags": [
                    "Order"
                ],
                "summary": "Update order",
                "description": "<h2>This API will update a order by orderCode and the value json form below</h2><br><code>Press try it out button to modified</code>",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "orderCode",
                        "in": "path",
                        "description": "<h4>This is the code of the order you need update</h4>\r\n              <code>Type: <b id='require'>String</b></code>",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "<table id='my-custom-table'>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <td>Description</td>\r\n                    <td><b id='require'>Required</b></td>\r\n                </tr>\r\n                <tr>\r\n                    <th>order_status</th>\r\n                    <td>This is status of order</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>order_id</th>\r\n                    <td>This is id of order</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>order_group</th>\r\n                    <td>This is order channel</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>order_description</th>\r\n                    <td>This is description of order</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>products</th>\r\n                    <td>\r\n                        <table>\r\n                            <tr>\r\n                                <th>image_product</th>\r\n                                <td>Image of product</td>\r\n                                <td>false</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>code_product</th>\r\n                                <td>code of product</td>\r\n                                <td>false</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>name_product</th>\r\n                                <td>Product name</td>\r\n                                <td>false</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>cost_product</th>\r\n                                <td>cost of product</td>\r\n                                <td>false</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>price_product</th>\r\n                                <td>Price product for sell</td>\r\n                                <td>false</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>color_product</th>\r\n                                <td>Product color</td>\r\n                                <td>false</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>option_product</th>\r\n                                <td>Option of product</td>\r\n                                <td>false</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>gift_product</th>\r\n                                <td>gift when buy product</td>\r\n                                <td>false</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>notes_product</th>\r\n                                <td>notes for product</td>\r\n                                <td>false</td>\r\n                            </tr>\r\n                        </table>\r\n                    </td>\r\n                    <td>false</td>\r\n                </tr>\r\n            </table><br><code>Click Schema to view data property</code>",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "order_status": {
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "order_id": {
                                        "type": "string",
                                        "example": "DH001"
                                    },
                                    "order_group": {
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "order_description": {
                                        "type": "string",
                                        "example": "notes to order"
                                    },
                                    "products": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "code_product",
                                                "name_product"
                                            ],
                                            "properties": {
                                                "image_product": {
                                                    "type": "string",
                                                    "example": "https://dbk.vn/uploads/ckfinder/images/1-content/anh-dep-1.jpg"
                                                },
                                                "code_product": {
                                                    "type": "string",
                                                    "example": "H001"
                                                },
                                                "name_product": {
                                                    "type": "string",
                                                    "example": "Iphone 3 promax"
                                                },
                                                "cost_product": {
                                                    "type": "string",
                                                    "example": "2,000,000"
                                                },
                                                "price_product": {
                                                    "type": "string",
                                                    "example": "20,000,000"
                                                },
                                                "color_product": {
                                                    "type": "string",
                                                    "example": "Xanh"
                                                },
                                                "option_product": {
                                                    "type": "string",
                                                    "example": "1 máº¯t"
                                                },
                                                "gift_product": {
                                                    "type": "string",
                                                    "example": "á»p lÆ°ng"
                                                },
                                                "notes_product": {
                                                    "type": "string",
                                                    "example": "nothing to notes"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Update successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Update order successfully"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order not found"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v3/product": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get list product",
                "description": "<h2>This API will Get list product with condition below</h2>",
                "operationId": "index",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "<h4>Number of page to get</h4>\r\n                    <code>Type: <b id='require'>Number</b></code>",
                        "required": false,
                        "explode": true,
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "<h4>Total number of records to get</h4>\r\n                    <code>Type: <b id='require'>Number<b></code>",
                        "required": false,
                        "explode": true,
                        "example": 5
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "<h4>Find records with condition get result desire</h4>\r\n                    <code>Type: <b id='require'>String<b></code><br>\r\n                    <code>Seach type supported with <b id='require'><(like,=,!=,beetwen)></b> </code><br>\r\n                    <code>With type search beetwen value like this <b id='require'> created_at<<beetwen>beetwen>{$start_date}|{$end_date}</b> format (Y/m/d H:i:s)</code><br>\r\n                    <code id='require'>If multiple search with connect (,) before</code>",
                        "required": false,
                        "explode": true,
                        "example": "product_name<=>Iphone 13"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "<h4>Sort records by colunm</h4>\r\n                    <code>Type: <b id='require'>String</b></code><br>\r\n                    <code>Sort type supported with <b id='require'>(DESC,ASC)</b></code><br>\r\n                    <code id='require'>If multiple order with connect (,) before</code>",
                        "required": false,
                        "explode": true,
                        "example": "id:DESC"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "<h4>Get only the desired columns</h4>\r\n                    <code>Type: <b id='require'>String<b></code>",
                        "required": false,
                        "explode": true,
                        "example": "id,product_code,product_name,product_orig_price"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "number",
                                                            "example": "1"
                                                        },
                                                        "product_code": {
                                                            "type": "string",
                                                            "example": "null"
                                                        },
                                                        "product_name": {
                                                            "type": "string",
                                                            "example": "null"
                                                        },
                                                        "product_orig_price": {
                                                            "type": "string",
                                                            "example": "null"
                                                        },
                                                        "product_price": {
                                                            "type": "string",
                                                            "example": "null"
                                                        },
                                                        "product_unit": {
                                                            "type": "string",
                                                            "example": "null"
                                                        },
                                                        "product_unit_id": {
                                                            "type": "number",
                                                            "example": "null"
                                                        },
                                                        "product_type": {
                                                            "type": "string",
                                                            "example": "null"
                                                        },
                                                        "product_weight": {
                                                            "type": "string",
                                                            "example": "null"
                                                        },
                                                        "product_stock": {
                                                            "type": "number",
                                                            "example": "null"
                                                        },
                                                        "product_unlimited": {
                                                            "type": "number",
                                                            "example": "null"
                                                        },
                                                        "product_allows_sale": {
                                                            "type": "string",
                                                            "example": "null"
                                                        },
                                                        "product_week_expire": {
                                                            "type": "number",
                                                            "example": "null"
                                                        },
                                                        "product_day_expire": {
                                                            "type": "number",
                                                            "example": "null"
                                                        },
                                                        "is_surcharge": {
                                                            "type": "number",
                                                            "example": "null"
                                                        },
                                                        "product_barcode": {
                                                            "type": "string",
                                                            "example": "null"
                                                        },
                                                        "product_origin": {
                                                            "type": "string",
                                                            "example": "null"
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "example": "2021-03-24 10:51:06"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "current_page": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "first_page_url": {
                                                    "type": "string",
                                                    "example": "null"
                                                },
                                                "next_page_url": {
                                                    "type": "string",
                                                    "example": "null"
                                                },
                                                "last_page_url": {
                                                    "type": "string",
                                                    "example": "null"
                                                },
                                                "prev_page_url": {
                                                    "type": "string",
                                                    "example": "null"
                                                },
                                                "from": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "to": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "total": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "path": {
                                                    "type": "string",
                                                    "example": "http://api-dev2021.midesk.vn/api/v3/product"
                                                },
                                                "last_page": {
                                                    "type": "string",
                                                    "example": "null"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Product"
                ],
                "summary": "Create a product",
                "description": "<h2>This API will Create a product with json form below</h2><br><code>Press try it out button to modified</code>",
                "operationId": "store",
                "requestBody": {
                    "description": "<table id='my-custom-table'>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>Description</th>\r\n                    <td><b id='require'>Required</b></td>\r\n                </tr>\r\n                <tr>\r\n                    <th>branch</th>\r\n                    <td>The branch product</td>\r\n                    <td>true</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>product_is_active</th>\r\n                    <td>Product active (no = 0, yes = 1)</td>\r\n                    <td>false (default = 1)</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>product_name</th>\r\n                    <td>The name of product</td>\r\n                    <td>true</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>product_barcode</th>\r\n                    <td>Product barcode</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>product_stock</th>\r\n                    <td>Product stock</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>product_expire</th>\r\n                    <td>Date expire of product</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>category_id</th>\r\n                    <td>Category of product</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>unit_id</th>\r\n                    <td>Unit of product</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>price</th>\r\n                    <td>The price of product</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>cost_price</th>\r\n                    <td>The cost of product</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>unlimited</th>\r\n                    <td>Allow to sell when this product is out of stock</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>is_surcharge</th>\r\n                    <td>Is there any extra charge for the product? (no = 0,yes = 1)</td>\r\n                    <td>false</td>\r\n                </tr>\r\n            </table><br><code>Click Schema to view data property</code>",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "branch",
                                    "product_code",
                                    "product_name",
                                    "product_is_active",
                                    "category_id",
                                    "unit_id"
                                ],
                                "properties": {
                                    "branch": {
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "product_is_active": {
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "product_name": {
                                        "type": "string",
                                        "example": "IP 11 Promax"
                                    },
                                    "product_barcode": {
                                        "type": "string",
                                        "example": "0123"
                                    },
                                    "product_stock": {
                                        "type": "string",
                                        "example": "12"
                                    },
                                    "product_expire": {
                                        "type": "string",
                                        "example": "2"
                                    },
                                    "category_id": {
                                        "type": "string",
                                        "example": "132"
                                    },
                                    "unit_id": {
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "price": {
                                        "type": "string",
                                        "example": "200,000,000"
                                    },
                                    "cost_price": {
                                        "type": "string",
                                        "example": "100,000,000"
                                    },
                                    "unlimited": {
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "is_surcharge": {
                                        "type": "string",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Create product Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Create product Successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "product_code": {
                                                    "type": "string",
                                                    "example": "1"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Create failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "This product already exists"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v3/product/{productCode}": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Find product by productCode",
                "description": "<h2>This API will find product by {productCode} and return only a single record</h2>",
                "operationId": "show",
                "parameters": [
                    {
                        "name": "productCode",
                        "in": "path",
                        "description": "<h4>This is the code of the product you are looking for</h4>\r\n              <code>Type: <b id='require'>String</b></code>",
                        "required": true,
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "product_code": {
                                                    "type": "string",
                                                    "example": "DH00011"
                                                },
                                                "product_name": {
                                                    "type": "string",
                                                    "example": "null"
                                                },
                                                "product_orig_price": {
                                                    "type": "string",
                                                    "example": "null"
                                                },
                                                "product_price": {
                                                    "type": "string",
                                                    "example": "null"
                                                },
                                                "product_unit": {
                                                    "type": "string",
                                                    "example": "null"
                                                },
                                                "product_unit_id": {
                                                    "type": "string",
                                                    "example": "null"
                                                },
                                                "product_type": {
                                                    "type": "string",
                                                    "example": "null"
                                                },
                                                "product_weight": {
                                                    "type": "string",
                                                    "example": "null"
                                                },
                                                "product_barcode": {
                                                    "type": "string",
                                                    "example": "null"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "null"
                                                },
                                                "product_origin": {
                                                    "type": "string",
                                                    "example": "null"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Product"
                ],
                "summary": "Delete a product by productCode",
                "description": "<h2>This API will delete a product by productCode</h2>",
                "operationId": "destroy",
                "parameters": [
                    {
                        "name": "productCode",
                        "in": "path",
                        "description": "<h4>This is the id of the product you need delete</h4>\r\n              <code>Type: <b id='require'>Number</b></code>",
                        "required": true,
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete product successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Delete product successfully"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v3/product/{$productCode}": {
            "put": {
                "tags": [
                    "Product"
                ],
                "summary": "Update product by productCode",
                "description": "<h2>This API will update a product by productCode and the value json form below</h2><br><code>Press try it out button to modified</code>",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "productCode",
                        "in": "path",
                        "description": "<table id='my-custom-table'>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>Description</th>\r\n                    <td><b id='require'>Required</b></td>\r\n                </tr>\r\n                <tr>\r\n                    <th>branch</th>\r\n                    <td>The branch product</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>product_is_active</th>\r\n                    <td>Product active (no = 0, yes = 1)</td>\r\n                    <td>false (default = 1)</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>product_name</th>\r\n                    <td>The name of product</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>product_barcode</th>\r\n                    <td>Product barcode</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>product_stock</th>\r\n                    <td>Product stock</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>product_expire</th>\r\n                    <td>Date expire of product</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>category_id</th>\r\n                    <td>Category of product</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>unit_id</th>\r\n                    <td>Unit of product</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>price</th>\r\n                    <td>The price of product</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>cost_price</th>\r\n                    <td>The cost of product</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>unlimited</th>\r\n                    <td>Allow to sell when this product is out of stock</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>is_surcharge</th>\r\n                    <td>Is there any extra charge for the product? (no = 0,yes = 1)</td>\r\n                    <td>false</td>\r\n                </tr>\r\n            </table><br><code>Click Schema to view data property</code>",
                        "required": true
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "branch",
                                    "product_code",
                                    "product_name",
                                    "product_is_active",
                                    "category_id",
                                    "unit_id"
                                ],
                                "properties": {
                                    "branch": {
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "product_code": {
                                        "type": "string",
                                        "example": "#123"
                                    },
                                    "product_is_active": {
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "product_name": {
                                        "type": "string",
                                        "example": "IP 11 Promax"
                                    },
                                    "product_barcode": {
                                        "type": "string",
                                        "example": "0123"
                                    },
                                    "product_stock": {
                                        "type": "string",
                                        "example": "12"
                                    },
                                    "product_expire": {
                                        "type": "string",
                                        "example": "2"
                                    },
                                    "category_id": {
                                        "type": "string",
                                        "example": "132"
                                    },
                                    "unit_id": {
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "price": {
                                        "type": "string",
                                        "example": "200,000,000"
                                    },
                                    "cost_price": {
                                        "type": "string",
                                        "example": "100,000,000"
                                    },
                                    "unlimited": {
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "is_surcharge": {
                                        "type": "string",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Update product Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Create product Successfully"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Update failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product do not exists"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v3/ticketCategory": {
            "get": {
                "tags": [
                    "Ticket Category"
                ],
                "summary": "Get list category of ticket",
                "description": "<h2>This API will Get list category of ticket with condition below</h2>",
                "operationId": "index",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "<h4>Number of page to get</h4>\r\n                    <code>Type: <b id='require'>Number</b></code>",
                        "required": false,
                        "explode": true,
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "<h4>Total number of records to get</h4>\r\n                    <code>Type: <b id='require'>Number<b></code>",
                        "required": false,
                        "explode": true,
                        "example": 5
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "<h4>Find records with condition get result desire</h4>\r\n                    <code>Type: <b id='require'>String<b></code><br>\r\n                    <code>Seach type supported with <b id='require'><(like,=,!=)></b> </code><br>\r\n                    <code id='require'>If multiple search with connect (,) before</code>",
                        "required": false,
                        "explode": true,
                        "example": "parent<=>0"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "<h4>Sort records by colunm</h4>\r\n                    <code>Type: <b id='require'>String</b></code><br>\r\n                    <code>Sort type supported with <b id='require'>(DESC,ASC)</b></code><br>\r\n                    <code id='require'>If multiple order with connect (,) before</code>",
                        "required": false,
                        "explode": true,
                        "example": "id:DESC"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "<h4>Get only the desired columns</h4>\r\n                    <code>Type: <b id='require'>String<b></code>",
                        "required": false,
                        "explode": true,
                        "example": "id,name,parent"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "string",
                                                            "example": "109"
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "YÃªu cáº§u"
                                                        },
                                                        "parent": {
                                                            "type": "string",
                                                            "example": "0"
                                                        },
                                                        "parent2": {
                                                            "type": "string",
                                                            "example": "109"
                                                        },
                                                        "level": {
                                                            "type": "string",
                                                            "example": "1"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "current_page": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "first_page_url": {
                                                    "type": "string",
                                                    "example": "null"
                                                },
                                                "next_page_url": {
                                                    "type": "string",
                                                    "example": "null"
                                                },
                                                "last_page_url": {
                                                    "type": "string",
                                                    "example": "null"
                                                },
                                                "prev_page_url": {
                                                    "type": "string",
                                                    "example": "null"
                                                },
                                                "from": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "to": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "total": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "path": {
                                                    "type": "string",
                                                    "example": "http://api-dev2021.midesk.vn/api/v3/ticketCategory"
                                                },
                                                "last_page": {
                                                    "type": "string",
                                                    "example": "null"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v3/ticket": {
            "get": {
                "tags": [
                    "Ticket"
                ],
                "summary": "Get list ticket",
                "description": "<h2>This API will Get list ticket with condition below</h2>",
                "operationId": "index",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "<h4>Number of page to get</h4>\r\n                    <code>Type: <b id='require'>Number</b></code>",
                        "required": false,
                        "explode": true,
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "<h4>Total number of records to get</h4>\r\n                    <code>Type: <b id='require'>Number<b></code>",
                        "required": false,
                        "explode": true,
                        "example": 5
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "<h4>Find records with condition get result desire</h4>\r\n                    <code>Type: <b id='require'>String<b></code><br>\r\n                    <code>Seach type supported with <b id='require'><(like,=,!=,beetwen)></b> </code><br>\r\n                    <code>With type search beetwen value like this <b id='require'> created_at<<beetwen>beetwen>{$start_date}|{$end_date}</b> format (Y/m/d H:i:s) </code><br>\r\n                    <code id='require'>If multiple search with connect (,) before</code>",
                        "required": false,
                        "explode": true,
                        "example": "title<=>example"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "<h4>Sort records by colunm</h4>\r\n                    <code>Type: <b id='require'>String</b></code><br>\r\n                    <code>Sort type supported with <b id='require'>(DESC,ASC)</b></code><br>\r\n                    <code id='require'>If multiple order with connect (,) before</code>",
                        "required": false,
                        "explode": true,
                        "example": "id:DESC"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "<h4>Get only the desired columns</h4>\r\n                    <code>Type: <b id='require'>String<b></code>",
                        "required": false,
                        "explode": true,
                        "example": "title,status,id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "string",
                                                            "example": "1"
                                                        },
                                                        "ticket_id": {
                                                            "type": "string",
                                                            "example": "1"
                                                        },
                                                        "title": {
                                                            "type": "string",
                                                            "example": "this is example ticket"
                                                        },
                                                        "assign_agent": {
                                                            "type": "string",
                                                            "example": "1"
                                                        },
                                                        "requester": {
                                                            "type": "string",
                                                            "example": "3"
                                                        },
                                                        "get_tickets_detail": {
                                                            "type": "array",
                                                            "items": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "string",
                                                                        "example": "1"
                                                                    },
                                                                    "title": {
                                                                        "type": "string",
                                                                        "example": "this is title example"
                                                                    },
                                                                    "content": {
                                                                        "type": "string",
                                                                        "example": "this is content example"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "current_page": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "first_page_url": {
                                                    "type": "string",
                                                    "example": "null"
                                                },
                                                "next_page_url": {
                                                    "type": "string",
                                                    "example": "null"
                                                },
                                                "last_page_url": {
                                                    "type": "string",
                                                    "example": "null"
                                                },
                                                "prev_page_url": {
                                                    "type": "string",
                                                    "example": "null"
                                                },
                                                "from": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "to": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "total": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "path": {
                                                    "type": "string",
                                                    "example": "http://api-dev2021.midesk.vn/api/v3/ticket"
                                                },
                                                "last_page": {
                                                    "type": "string",
                                                    "example": "null"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Ticket"
                ],
                "summary": "Create a ticket",
                "description": "<h2>This API will Create a ticket with json form below</h2><br><code>Press try it out button to modified</code>",
                "operationId": "store",
                "requestBody": {
                    "description": "<table id='my-custom-table'>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>Description</th>\r\n                    <td><b id='require'>Required</b></td>\r\n                </tr>\r\n                <tr>\r\n                    <th>title</th>\r\n                    <td>Title of ticket</td>\r\n                    <td>true</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>content</th>\r\n                    <td>Content of ticket</td>\r\n                    <td>true</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>channel</th>\r\n                    <td>Channel sent request</td>\r\n                    <td>false (default = api)</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>priority</th>\r\n                    <td>Ticket importance</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>category</th>\r\n                    <td>category id of ticket</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>contact</th>\r\n                    <td>\r\n                        Use contact id if available <br> \r\n                        <table>\r\n                            <tr>\r\n                                <th>name</th>\r\n                                <td>Name of contact</td>\r\n                                <td>true</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>email</th>\r\n                                <td>Email of contact</td>\r\n                                <td>true if without phone</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>phone</th>\r\n                                <td>Phone of contact</td>\r\n                                <td>true if without email</td>\r\n                            </tr>\r\n                        </table>\r\n                    </td>\r\n                    <td>false</td>\r\n                </tr>\r\n            </table><br><code>Click Schema to view data property</code>",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "content"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Phiáº¿u khiáº¿u náº¡i 2"
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "Ná»i dung phiáº¿u sá» 1"
                                    },
                                    "channel": {
                                        "type": "string",
                                        "example": "Facebook"
                                    },
                                    "priority": {
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "category": {
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "contact": {
                                        "required": [
                                            "name",
                                            "email"
                                        ],
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "example": "Nguyá»n vÄn A"
                                            },
                                            "facebook_id": {
                                                "type": "string",
                                                "example": ""
                                            },
                                            "email": {
                                                "type": "string",
                                                "example": "abcxyz@gmail.com"
                                            },
                                            "phone": {
                                                "type": "string",
                                                "example": "0123456789"
                                            },
                                            "zalo_id": {
                                                "type": "string",
                                                "example": ""
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Create Ticket Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Create Ticket Successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "example": "1"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Create failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        },
                                        "errors": {
                                            "properties": {
                                                "title": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "the title field is required"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v3/ticket/{ticketId}": {
            "get": {
                "tags": [
                    "Ticket"
                ],
                "summary": "Find ticket by ticketId",
                "description": "<h2>This API will find ticket by {ticketId} and return only a single record</h2>",
                "operationId": "show",
                "parameters": [
                    {
                        "name": "ticketId",
                        "in": "path",
                        "description": "<h4>This is the id of the ticket you are looking for</h4>\r\n              <code>Type: <b id='require'>Number</b></code>",
                        "required": true,
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "ticket_id": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "this is example ticket"
                                                },
                                                "assign_agent": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "requester": {
                                                    "type": "string",
                                                    "example": "3"
                                                },
                                                "get_tickets_detail": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "example": "1"
                                                            },
                                                            "title": {
                                                                "type": "string",
                                                                "example": "this is title example"
                                                            },
                                                            "content": {
                                                                "type": "string",
                                                                "example": "this is content example"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid Ticket ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "boolean",
                                            "example": "Ticket not found"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Ticket"
                ],
                "summary": "Delete a ticket by ticketId",
                "description": "<h2>This API will delete a ticket by ticketId</h2>",
                "operationId": "destroy",
                "parameters": [
                    {
                        "name": "ticketId",
                        "in": "path",
                        "description": "<h4>This is the id of the ticket you need delete</h4>\r\n              <code>Type: <b id='require'>Number</b></code>",
                        "required": true,
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete ticket successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Delete ticket successfully"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Ticket not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Ticket not found"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v3/ticket/{$ticketId}": {
            "put": {
                "tags": [
                    "Ticket"
                ],
                "summary": "Update ticket by ticketId",
                "description": "<h2>This API will update a ticket by ticketId and the value json form below</h2><br><code>Press try it out button to modified</code>",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "ticketId",
                        "in": "path",
                        "description": "<table id='my-custom-table'>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>Description</th>\r\n                    <td><b id='require'>Required</b></td>\r\n                </tr>\r\n                <tr>\r\n                    <th>title</th>\r\n                    <td>Title of ticket</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>content</th>\r\n                    <td>Content of ticket</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>channel</th>\r\n                    <td>Channel sent request</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>priority</th>\r\n                    <td>Ticket importance</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>category</th>\r\n                    <td>category id of ticket</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>contact</th>\r\n                    <td>\r\n                        Use contact id if available <br>\r\n                        <table>\r\n                            <tr>\r\n                                <th>name</th>\r\n                                <td>Name of contact</td>\r\n                                <td>false</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>facebook_id</th>\r\n                                <td>Facebook code of contact</td>\r\n                                <td>false</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>email</th>\r\n                                <td>Email of contact</td>\r\n                                <td>true if without phone</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>phone</th>\r\n                                <td>Phone of contact</td>\r\n                                <td>true if without email</td>\r\n                            </tr>\r\n                        </table>\r\n                    </td>\r\n                    <td>false</td>\r\n                </tr>\r\n            </table><br><code>Click Schema to view data property</code>",
                        "required": true
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "content"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Phiáº¿u khiáº¿u náº¡i 2"
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "Ná»i dung phiáº¿u sá» 1"
                                    },
                                    "channel": {
                                        "type": "string",
                                        "example": "Facebook"
                                    },
                                    "priority": {
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "category": {
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "contact": {
                                        "required": [
                                            "name",
                                            "email"
                                        ],
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "example": "Nguyá»n vÄn A"
                                            },
                                            "facebook_id": {
                                                "type": "string",
                                                "example": ""
                                            },
                                            "email": {
                                                "type": "string",
                                                "example": "abcxyz@gmail.com"
                                            },
                                            "phone": {
                                                "type": "string",
                                                "example": "0123456789"
                                            },
                                            "zalo_id": {
                                                "type": "string",
                                                "example": ""
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Update successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Update ticket successfully"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "If $ticketId do not exist or invalid will be return ticket not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Ticket not found"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v3/ticket/comment/{$ticketId}": {
            "post": {
                "tags": [
                    "Ticket"
                ],
                "summary": "Create a new comment inside a ticket by ticketId",
                "description": "<h2>This API will create a comment in a ticket by ticketId and the value json form below</h2><br><code>Press try it out button to modified</code>",
                "operationId": "comment",
                "parameters": [
                    {
                        "name": "ticketId",
                        "in": "path",
                        "description": "<table id='my-custom-table'>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>Description</th>\r\n                    <td><b id='require'>Required</b></td>\r\n                </tr>\r\n                <tr>\r\n                    <th>private</th>\r\n                    <td>(0: normal, 1: internal note)</td>\r\n                    <td>true</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>content</th>\r\n                    <td>Content of comment</td>\r\n                    <td>true</td>\r\n                </tr>\r\n            </table><br><code>Click Schema to view data property</code>",
                        "required": true
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "private",
                                    "content"
                                ],
                                "properties": {
                                    "content": {
                                        "type": "string",
                                        "example": "Content ticket num 1"
                                    },
                                    "private": {
                                        "type": "string",
                                        "example": "0"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Create a comment successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Create a comment successfully"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "If $ticketId do not exist or invalid will be return ticket not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Ticket not found"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v3/ticket/ticketForm": {
            "get": {
                "tags": [
                    "Ticket"
                ],
                "summary": "Get sample data to create ticket",
                "description": "<h2>This API will get sample data to create tickets</h2><br><code>Press try it out button to modified</code>",
                "operationId": "ticketForm",
                "responses": {
                    "200": {
                        "description": "Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "properties": {
                                                        "teams": {
                                                            "properties": {
                                                                "13": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "properties": {
                                                                            "id": {
                                                                                "type": "string",
                                                                                "example": "1"
                                                                            },
                                                                            "fullname": {
                                                                                "type": "string",
                                                                                "example": "this is title example"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "priority": {
                                                            "type": "array",
                                                            "items": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "string",
                                                                        "example": "1"
                                                                    },
                                                                    "name": {
                                                                        "type": "string",
                                                                        "example": "Kháº©n cáº¥p"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "category": {
                                                            "type": "array",
                                                            "items": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "string",
                                                                        "example": "1"
                                                                    },
                                                                    "name": {
                                                                        "type": "string",
                                                                        "example": "YÃªu cáº§u (Enquiry)"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "listEmail": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string",
                                                                "example": "abc@gmail.com"
                                                            }
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v3/ticket/macro": {
            "get": {
                "tags": [
                    "Ticket"
                ],
                "summary": "Get sample data to create ticket",
                "description": "<h2>This API will get sample data to create quick tickets</h2><br><code>Press try it out button to modified</code>",
                "operationId": "macroList",
                "responses": {
                    "200": {
                        "description": "Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "properties": {
                                                        "priority": {
                                                            "type": "array",
                                                            "items": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "string",
                                                                        "example": "1"
                                                                    },
                                                                    "title": {
                                                                        "type": "string",
                                                                        "example": "Kháº©n cáº¥p"
                                                                    },
                                                                    "description": {
                                                                        "type": "string",
                                                                        "example": "text to test"
                                                                    },
                                                                    "type": {
                                                                        "type": "string",
                                                                        "example": "text"
                                                                    },
                                                                    "action": {
                                                                        "type": "string",
                                                                        "example": "some action"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v3/agent": {
            "get": {
                "tags": [
                    "Agent"
                ],
                "summary": "Get list agent",
                "description": "<h2>This API will Get list agent with condition below</h2>",
                "operationId": "index",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "<h4>Number of page to get</h4>\r\n                    <code>Type: <b id='require'>Number</b></code>",
                        "required": false,
                        "explode": true,
                        "example": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "<h4>Total number of records to get</h4>\r\n                    <code>Type: <b id='require'>Number<b></code>",
                        "required": false,
                        "explode": true,
                        "example": 5
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "<h4>Find records with condition get result desire</h4>\r\n                    <code>Type: <b id='require'>String<b></code><br>\r\n                    <code>Seach type supported with <b id='require'><(like,=,!=)></b> </code><br>\r\n                    <code id='require'>If multiple search with connect (,) before</code>",
                        "required": false,
                        "explode": true,
                        "example": "fullname<like>Nguyá»n"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "<h4>Sort records by colunm</h4>\r\n                    <code>Type: <b id='require'>String</b></code><br>\r\n                    <code>Sort type supported with <b id='require'>(DESC,ASC)</b></code><br>\r\n                    <code id='require'>If multiple order with connect (,) before</code>",
                        "required": false,
                        "explode": true,
                        "example": "id:DESC"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "<h4>Get only the desired columns</h4>\r\n                    <code>Type: <b id='require'>String<b></code>",
                        "required": false,
                        "explode": true,
                        "example": "fullname,phone,email"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "string",
                                                            "example": "1"
                                                        },
                                                        "firstname": {
                                                            "type": "string",
                                                            "example": "vÄn A"
                                                        },
                                                        "lastname": {
                                                            "type": "string",
                                                            "example": "Nguyá»n"
                                                        },
                                                        "phone": {
                                                            "type": "string",
                                                            "example": "0987654321"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "abcxyz@gmail.com"
                                                        },
                                                        "address": {
                                                            "type": "string",
                                                            "example": "212/123b"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "current_page": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "first_page_url": {
                                                    "type": "string",
                                                    "example": "null"
                                                },
                                                "next_page_url": {
                                                    "type": "string",
                                                    "example": "null"
                                                },
                                                "last_page_url": {
                                                    "type": "string",
                                                    "example": "null"
                                                },
                                                "prev_page_url": {
                                                    "type": "string",
                                                    "example": "null"
                                                },
                                                "from": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "to": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "total": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "path": {
                                                    "type": "string",
                                                    "example": "http://api-dev2021.midesk.vn/api/v3/agent"
                                                },
                                                "last_page": {
                                                    "type": "string",
                                                    "example": "null"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Agent"
                ],
                "summary": "Create a agent",
                "description": "<h2>This API will Create a agent with json form below</h2><br><code>Press try it out button to modified</code>",
                "operationId": "store",
                "requestBody": {
                    "description": "<table id='my-custom-table'>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>Description</th>\r\n                    <td><b id='require'>Required</b></td>\r\n                </tr>\r\n                <tr>\r\n                    <th>firstname</th>\r\n                    <td>The first name of agent</td>\r\n                    <td>true</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>lastname</th>\r\n                    <td>The last name of agent</td>\r\n                    <td>true</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>password</th>\r\n                    <td>Password (Password must contain at least one special character and number)</td>\r\n                    <td>true</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>password_confirmation</th>\r\n                    <td>Confirm password (valid to password)</td>\r\n                    <td>true</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>phone</th>\r\n                    <td>Phone number agent</td>\r\n                    <td>true</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>email</th>\r\n                    <td>Email address agent</td>\r\n                    <td>true</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>account_type</th>\r\n                    <td>Account type ( 'agent','supervisor','admin' )</td>\r\n                    <td>true</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>perrmission</th>\r\n                    <td>Permission of agent</td>\r\n                    <td>true</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>role</th>\r\n                    <td>Role of agent ('sales','cs','telephonist')</td>\r\n                    <td>true</td>\r\n                </tr>\r\n            </table><br><code>Click Schema to view data property</code>",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "firstname",
                                    "lastname",
                                    "password",
                                    "password_confirmation",
                                    "phone",
                                    "email",
                                    "account_type",
                                    "perrmission",
                                    "role"
                                ],
                                "properties": {
                                    "firstname": {
                                        "type": "string",
                                        "example": "Nguyá»n"
                                    },
                                    "lastname": {
                                        "type": "string",
                                        "example": "VÄn A"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "123456"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "123456"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "012345564"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "abcxyz@gmail.com"
                                    },
                                    "account_type": {
                                        "type": "string",
                                        "example": "agent"
                                    },
                                    "perrmission": {
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "role": {
                                        "type": "string",
                                        "example": "cs"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Create Agent Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Create Agent Successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "agent_id": {
                                                    "type": "string",
                                                    "example": "1"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Create Agent failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        },
                                        "errors": {
                                            "properties": {
                                                "firstname": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "the firstname field is required"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v3/agent/{agentId}": {
            "get": {
                "tags": [
                    "Agent"
                ],
                "summary": "Find agent by agentId",
                "description": "<h2>This API will find agent by {agentId} and return only a single record</h2>",
                "operationId": "show",
                "parameters": [
                    {
                        "name": "agentId",
                        "in": "path",
                        "description": "<h4>This is the code of the agent you are looking for</h4>\r\n              <code>Type: <b id='require'>Number</b></code>",
                        "required": true,
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "firstname": {
                                                    "type": "string",
                                                    "example": "vÄn A"
                                                },
                                                "lastname": {
                                                    "type": "string",
                                                    "example": "Nguyá»n"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "0987654321"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "abcxyz@gmail.com"
                                                },
                                                "address": {
                                                    "type": "string",
                                                    "example": "212/123b"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Will be return agent not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Agent not found"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Agent"
                ],
                "summary": "Delete a agent by agentId",
                "description": "<h2>This API will delete a agent by agentId</h2>",
                "operationId": "destroy",
                "parameters": [
                    {
                        "name": "agentId",
                        "in": "path",
                        "description": "<h4>This is the id of the agent you need delete</h4>\r\n              <code>Type: <b id='require'>Number</b></code>",
                        "required": true,
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete agent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Delete agent successfully"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Agent not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Agent not found"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/v3/agent/{$agentId}": {
            "put": {
                "tags": [
                    "Agent"
                ],
                "summary": "Update agent by agentId",
                "description": "<h2>This API will update a agent by agentId and the value json form below</h2><br><code>Press try it out button to modified</code>",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "agentId",
                        "in": "path",
                        "description": "<h4>This is the id of the agent you need update</h4>\r\n              <code>Type: <b id='require'>Number</b></code>",
                        "required": true,
                        "example": 1
                    }
                ],
                "requestBody": {
                    "description": "<table id='my-custom-table'>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>Description</th>\r\n                    <td><b id='require'>Required</b></td>\r\n                </tr>\r\n                <tr>\r\n                    <th>firstname</th>\r\n                    <td>The first name of agent</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>lastname</th>\r\n                    <td>The last name of agent</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>password</th>\r\n                    <td>Password (Password must contain at least one special character and number)</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>password_confirmation</th>\r\n                    <td>Confirm password (valid to password)</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>phone</th>\r\n                    <td>Phone number agent</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>email</th>\r\n                    <td>Email address agent</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>account_type</th>\r\n                    <td>Account type ( 'agent','supervisor','admin' )</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>perrmission</th>\r\n                    <td>Permission of agent</td>\r\n                    <td>false</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>role</th>\r\n                    <td>Role of agent ('sales','cs','telephonist')</td>\r\n                    <td>false</td>\r\n                </tr>\r\n            </table><br><code>Click Schema to view data property</code>",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "firstname",
                                    "lastname",
                                    "password",
                                    "password_confirmation",
                                    "phone",
                                    "email",
                                    "account_type",
                                    "perrmission",
                                    "role"
                                ],
                                "properties": {
                                    "firstname": {
                                        "type": "string",
                                        "example": "Nguyá»n"
                                    },
                                    "lastname": {
                                        "type": "string",
                                        "example": "VÄn A"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "123456"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "123456"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "012345564"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "abcxyz@gmail.com"
                                    },
                                    "account_type": {
                                        "type": "string",
                                        "example": "agent"
                                    },
                                    "perrmission": {
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "role": {
                                        "type": "string",
                                        "example": "cs"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Update successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Update agent successfully"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Will be return agent not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Agent not found"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "[]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearer_token": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header"
            }
        }
    }
}